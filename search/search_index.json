{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hi there! \ud83d\udc4b This is Ming Wang","text":"<p>\ud83d\udc40 I'm currently a graduate CS student at USC Viterbi. </p> <p>\u26a1 ML Infra | Search &amp; Recommendation Engine</p> <p>\ud83d\udee0\ufe0f Skills</p> <ul> <li>Programming Languages</li> </ul> <p> </p> <ul> <li>Frameworks &amp; Libraries</li> </ul> <p> </p> <ul> <li>Machine Learning</li> </ul> <p> </p> <p>\ud83d\udceb Contact</p> <p> </p>"},{"location":"about-me/about-me/","title":"About Me","text":""},{"location":"about-me/about-me/#education","title":"\ud83c\udf93 Education","text":"<ul> <li>MSCS @ University of Southern California(USC) | Aug. 2021 - May 2023 @ Los Angeles, California, United States</li> <li>BSCS @ Nanjing University(NJU) | Sept. 2016 - June 2020 @ Nanjing, Jiangsu, China</li> </ul>"},{"location":"about-me/about-me/#research","title":"\ud83d\udcd6 Research","text":"<ul> <li>RA @ Robotic Embedded Systems Laboratory(RESL), USC</li> <li>RA @ Intelligent Media Pervasive, Recognition &amp; Understanding(IMAGINE), NJU</li> <li>RA @ Institute of Computer Software(ICS), NJU</li> </ul>"},{"location":"about-me/about-me/#work","title":"\ud83c\udfe2 Work","text":"<ul> <li>MLE Intern (High Throughput Asynchronous RL) @ Hugging Face | June 2022 - Aug. 2022 @ Los Angeles, California, United States</li> <li>MLE (High Performance Mobile Inference Engine) @ ByteDance | July 2020 - July 2021 @ Shanghai, China</li> </ul>"},{"location":"misc/misc/","title":"Misc","text":"<p>a lovely song: https://www.bilibili.com/video/BV1ir4y1u74w?mid=37065680&amp;p=1&amp;share_from=ugc&amp;share_medium=iphone&amp;share_plat=ios&amp;share_source=WEIXIN&amp;share_tag=s_i&amp;timestamp=1658907579&amp;unique_k=WJxJq7I</p> <p></p>"},{"location":"projects/full-stack-projects/","title":"Full Stack Projects","text":""},{"location":"projects/full-stack-projects/#list","title":"List","text":""},{"location":"projects/full-stack-projects/#stockapp-angular","title":"StockApp-Angular","text":"<ul> <li>Github link: https://github.com/wmFrank/StockApp-Angular</li> <li>Decription: An Angular web app about stock management</li> <li>Programming language: TypeScript, JavaScript, HTML, CSS</li> <li>Technologies: Angular, Bootstrap, Node.js, Flask</li> <li> <p>Results:</p> <p>web mode:</p> <p></p> <p>responsive/mobile mode:</p> <p></p> </li> </ul>"},{"location":"projects/full-stack-projects/#stockapp-ios","title":"StockApp-iOS","text":"<ul> <li>Github link: https://github.com/wmFrank/StockApp-iOS</li> <li>Decription: An iOS app about stock management</li> <li>Programming language: Swift, JavaScript, HTML</li> <li>Technologies: SwiftUI</li> <li> <p>Results:</p> <p>video demo:</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/","title":"Machine Learning Projects","text":""},{"location":"projects/machine-learning-projects/#list","title":"List","text":""},{"location":"projects/machine-learning-projects/#sample-factory","title":"Sample Factory","text":"<ul> <li>Github link: https://github.com/wmFrank/sample-factory</li> <li>Decription: High throughput asynchronous reinforcement learning library</li> <li>Programming language: Python</li> <li>Technologies: PyTorch, PPO</li> <li> <p>Results:</p> <p>Agent in game \"Doom\"</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#auto-driving","title":"Auto Driving","text":"<ul> <li>Github link: https://github.com/wmFrank/VISTA-auto-driving</li> <li>Decription: Autonomous driving with policy gradient RL based on the VISTA environment</li> <li>Programming language: Python</li> <li>Technologies: PyTorch, Jupyter Notebook</li> <li> <p>Results:</p> <p>Random Policy</p> <p></p> <p>Trained Policy</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#thought-game-sc2","title":"Thought-Game SC2","text":"<ul> <li>Github link: https://github.com/wmFrank/Thought-SC2</li> <li>Decription: Efficient reinforcement learning with DQN for StarCraft 2</li> <li>Programming language: Python</li> <li>Technologies: TensorFlow, DQN</li> </ul>"},{"location":"projects/machine-learning-projects/#aila-open-innovation","title":"AILA Open Innovation","text":"<ul> <li>Github link: https://github.com/willxxy/AILAOI</li> <li>Decription: A project about predicting infestations in the Santa Monica Mountains National Recreation Area and building a user-friendly dashboard based on ArcGIS platform to present results</li> <li>Programming language: Python, Jupyter Notebook</li> <li>Technologies: XGBoost, ArcGIS</li> <li> <p>Results:</p> <p>dashboard:</p> <p></p> <p>prize:</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#demon-neurohack-dementia-diagnosis","title":"DEMON-NEUROHACK: Dementia Diagnosis","text":"<ul> <li>Github link: https://github.com/DEMON-NEUROHACK/Challenge-2-LA-Team-A</li> <li>Decription: A data hackathon about predicting dementia status from data collected in India</li> <li>Programming language: Python, Jupyter Notebook</li> <li>Technologies: SMOTE, SHAP, Random Forest, XGBoost</li> <li> <p>Results:</p> <p>metrics:</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#molecular-property-prediction","title":"Molecular Property Prediction","text":"<ul> <li>Github link: https://github.com/wmFrank/molecular-property-prediction</li> <li>Decription: Using D-MPNN to predict the property of inhibition of HIV replication</li> <li>Programming language: Python</li> <li>Technologies: D-MPNN</li> <li> <p>Results:</p> <p>inhibition of HIV replication prediction</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#restaurant-brands-clustering","title":"Restaurant Brands Clustering","text":"<ul> <li>Github link: https://github.com/wmFrank/restaurant-brands-clustering</li> <li>Decription: Cluster restaurant brands based on their food names</li> <li>Programming language: Python, Jupyter Notebook</li> <li>Technologies: sentence_transformers</li> <li> <p>Results:</p> <p>This is the results of cluster restaurants into 10 clusters:</p> <p></p> </li> </ul>"},{"location":"projects/machine-learning-projects/#android-birthmark","title":"Android Birthmark","text":"<ul> <li>Github link: https://github.com/wmFrank/android-birthmark</li> <li>Decription: A GUI-based dynamic birthmark generation method for Android apps</li> <li>Programming language: Java, Python</li> <li>Technologies: PyTorch, CNN</li> </ul>"},{"location":"projects/machine-learning-projects/#emoji-prediction","title":"Emoji Prediction","text":"<ul> <li>Github link: https://github.com/wmFrank/emoji-prediction</li> <li>Decription: Emoji prediction based on Chinese texts</li> <li>Programming language: Python</li> <li>Technologies: Jieba, word2vec</li> </ul>"},{"location":"projects/other-projects/","title":"Other Projects","text":""},{"location":"projects/other-projects/#list","title":"List","text":""},{"location":"projects/other-projects/#computer-graphics-projects","title":"Computer Graphics Projects","text":"<ul> <li>Github link: https://github.com/wmFrank/intro-graphics-projects</li> <li>Decription: A set of projects for a great online course: GAMES101: Introduction to Computer Graphics, taught by Lingqi Yan</li> <li>Programming language: C/C++, HTML, JavaScript</li> <li> <p>Certificate:</p> <p></p> </li> <li> <p>Results:</p> <p>Z-buffering &amp; Anti-aliasing</p> Z-buffering rendered triangles improved with super-sampling anti-aliasing <p>Blinn-Phong Shader &amp; Texture Shader</p> Blinn-Phong Shader rendered cow Texture Shader rendered cow <p>Raytracing</p> Raytracing with Moller-Trumbore intersection algorithm <p>BVH &amp; SAH Acceleration Structure</p> Bounding Volume Hierarchy(BVH): 7.84s Surface Area Heuristic(SAH): 6.39s <p>Path Tracing</p> Path Tracing rendered Cornell Box </li> </ul>"},{"location":"projects/other-projects/#image-processing-projects","title":"Image Processing Projects","text":"<ul> <li>Github link: https://github.com/wmFrank/image-processing-projects</li> <li>Decription: A set of projects about histogram equalization, edge detection, edge linking, digit recognition</li> <li>Programming language: Matlab</li> <li> <p>Results:</p> <p>histogram equalization</p> input histogram of input output histogram of output <p>Canny edge detection and edge linking</p> input output after edge detection output after edge linking </li> </ul>"},{"location":"projects/other-projects/#image-stitching","title":"Image Stitching","text":"<ul> <li>Github link: https://github.com/wmFrank/image-stitching</li> <li>Decription: An implement of image stitching</li> <li>Programming language: Matlab</li> <li>Technologies: VLFeat, Ransac</li> <li> <p>Results:</p> input 1 input 2 output </li> </ul>"},{"location":"projects/other-projects/#monte-carlo-rendering-based-on-line-sampling","title":"Monte Carlo Rendering based on Line Sampling","text":"<ul> <li>Github link: https://github.com/wmFrank/line-sampling-rendering</li> <li>Decription: An implement of Monte Carlo rendering based on line sampling, featured with area light source process, path tracing, multi-threading acceleration, micro surface materials</li> <li>Programming language: C++</li> <li>Technologies: CMake</li> </ul>"},{"location":"projects/other-projects/#images-crawling-and-processing","title":"Images Crawling and Processing","text":"<ul> <li>Github link: https://github.com/wmFrank/image-crawl-and-process</li> <li>Decription: Images crawled with requests and processed with OpenCV</li> <li>Programming language: Python, C/C++</li> <li>Technologies: requests, OpenCV, Bloom filter</li> </ul>"},{"location":"projects/other-projects/#calabash-brothers","title":"Calabash Brothers","text":"<ul> <li>Github link: https://github.com/wmFrank/Calabash-Brothers</li> <li>Decription: A Java-based GUI game called Calabash Brothers</li> <li>Programming language: Java</li> <li>Technologies: JavaFX, Maven</li> <li> <p>Results:</p> <p>game recording</p> <p></p> </li> </ul>"},{"location":"projects/other-projects/#qt-canvas","title":"Qt Canvas","text":"<ul> <li>Github link: https://github.com/wmFrank/simple-canvas</li> <li>Decription: A Qt implement of a canvas with a set of drawing functions</li> <li>Programming language: C++</li> <li>Technologies: Qt, QMake</li> <li> <p>Results:</p> <p>canvas demo</p> <p></p> </li> </ul>"},{"location":"projects/other-projects/#relationships-mining-in-jins-novels","title":"Relationships Mining in Jin's Novels","text":"<ul> <li>Github link: https://github.com/wmFrank/relationships-mining</li> <li>Decription: A big data processing project about mining characters' relationships in Jin's novels</li> <li>Programming language: Java, Scala, Python</li> <li>Technologies: MapReduce, Hadoop, Spark, Hive, HBase</li> <li> <p>Results:</p> <p>Graph of characters' relationships</p> visualized via Gephi </li> </ul>"},{"location":"projects/other-projects/#student-information-management-system","title":"Student Information Management System","text":"<ul> <li>Github link: https://github.com/wmFrank/simple-student-admin-system</li> <li>Decription: An implement of a simple student information management system based on MFC framework, support addition, deletion, sorting, data I/O, data highlight</li> <li>Programming language: C/C++</li> <li>Technologies: Microsoft MFC</li> <li> <p>Results:</p> <p></p> </li> </ul>"},{"location":"projects/other-projects/#simple-computer-system","title":"Simple Computer System","text":"<ul> <li>Github link: https://github.com/wmFrank/simple-computer-system</li> <li>Decription: An implement of a simple computer system based on i386 framework</li> <li>Programming language: C</li> <li>Technologies: Linux</li> </ul>"},{"location":"projects/other-projects/#operating-system-projects","title":"Operating System Projects","text":"<ul> <li>Github link: https://github.com/wmFrank/simple-operating-system</li> <li>Decription: A set of projects about assembly-level programming, ELF loader and system call, process switching and scheduling, semaphore and multi-threading</li> <li>Programming language: C, Assembly</li> </ul>"},{"location":"projects/other-projects/#turing-machine-simulation","title":"Turing Machine Simulation","text":"<ul> <li>Github link: https://github.com/wmFrank/simple-turing-machine</li> <li>Decription: An implement of a simple Turing Machine deciding whether some strings belong to specific language</li> <li>Programming language: C++</li> </ul>"},{"location":"projects/other-projects/#computer-networks-projects","title":"Computer Networks Projects","text":"<ul> <li>Github link: https://github.com/wmFrank/computer-networks-projects</li> <li>Decription: A set of projects about networks topology, raw socket programming, subnetting &amp; NAT, static routing, VPN building</li> <li>Programming language: C/C++</li> <li>Technologies: Linux, Wireshark</li> </ul>"},{"location":"projects/other-projects/#databases-projects","title":"Databases Projects","text":"<ul> <li>Github link: https://github.com/wmFrank/databases-projects</li> <li>Decription: A set of projects about MySql basic operations, constrainted databases, third party tools operating databases</li> <li>Programming language: MySQL, Java</li> </ul>"}]}